warning: in the working copy of 'src/index.ts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/index.ts b/src/index.ts[m
[1mindex 69d2ee4..adb35d6 100644[m
[1m--- a/src/index.ts[m
[1m+++ b/src/index.ts[m
[36m@@ -102,11 +102,15 @@[m [mconst port = process.env.PORT || 3000;[m
 console.log('üöÄ Servidor iniciando...');[m
 console.log('üîß Modo desenvolvimento: proxy confi√°vel limitado ativado para ngrok');[m
 [m
[32m+[m[32m// Construir DATABASE_URL a partir das vari√°veis individuais[m
[32m+[m[32mconst databaseUrl = process.env.DATABASE_URL ||[m[41m [m
[32m+[m[32m  `postgresql://${process.env.DB_USER}:${process.env.DB_PASSWORD}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`;[m
[32m+[m
 // Logs de configura√ß√£o simplificados[m
 console.log('=== CONFIGURA√á√ïES CARREGADAS ===');[m
 console.log('Evolution API:', process.env.EVOLUTION_API_KEY ? '‚úÖ CONFIGURADA' : '‚ùå N√ÉO CONFIGURADA');[m
 console.log('GoHighLevel:', process.env.GHL_APP_CLIENT_ID ? '‚úÖ CONFIGURADO' : '‚ùå N√ÉO CONFIGURADO');[m
[31m-console.log('Banco de Dados:', process.env.DATABASE_URL ? '‚úÖ CONFIGURADO' : '‚ùå N√ÉO CONFIGURADO');[m
[32m+[m[32mconsole.log('Banco de Dados:', (process.env.DB_HOST && process.env.DB_USER && process.env.DB_PASSWORD && process.env.DB_NAME) ? '‚úÖ CONFIGURADO' : '‚ùå N√ÉO CONFIGURADO');[m
 console.log('================================');[m
 [m
 // Middleware de logging seguro j√° aplicado acima[m
[36m@@ -471,7 +475,7 @@[m [mapp.post("/webhook/ghl",[m
       console.log("LocationId:", locationId);[m
       console.log("MessageId:", messageId);[m
 [m
[31m-      if (eventType === 'UNINSTALL') {[m
[32m+[m[32m  if (eventType === 'UNINSTALL') {[m
       console.log("üóëÔ∏è Evento UNINSTALL detectado - removendo instala√ß√£o...");[m
       [m
               if (locationId) {[m
[36m@@ -671,8 +675,8 @@[m [mapp.post("/webhook/ghl",[m
                console.log(`‚úÖ Status da mensagem atualizado para "delivered":`, statusUpdateResponse.data);[m
              } catch (error: any) {[m
                console.error(`‚ùå Erro ao atualizar status da mensagem:`, error.message);[m
[31m-             }[m
[31m-          } else {[m
[32m+[m[32m          }[m
[32m+[m[32m      } else {[m
             console.log("‚ùå Nenhum messageId encontrado - n√£o √© poss√≠vel atualizar status");[m
           }[m
           [m
[36m@@ -696,7 +700,7 @@[m [mapp.post("/webhook/ghl",[m
           error: error.message[m
         });[m
       }[m
[31m-    } else {[m
[32m+[m[32m  } else {[m
       console.log(`‚ùì Tipo de evento n√£o suportado: ${eventType}`);[m
     }[m
     [m
[36m@@ -919,7 +923,7 @@[m [mapp.post("/send-message-evolution",[m
     }[m
 [m
     // Busca o instanceName espec√≠fico desta instala√ß√£o[m
[31m-    const installationDetails = await ghl.model.getInstallationInfo(locationId);[m
[32m+[m[32m              const installationDetails = await ghl.model.getInstallationInfo(locationId);[m
     if (!installationDetails) {[m
       return res.status(404).json({[m
         success: false,[m
[36m@@ -948,7 +952,7 @@[m [mapp.post("/send-message-evolution",[m
     [m
     if (result.success) {[m
       res.json(result);[m
[31m-  } else {[m
[32m+[m[32m          } else {[m
       res.status(400).json(result);[m
     }[m
   } catch (error: any) {[m
